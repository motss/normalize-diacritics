name: publish

on:
  push:
    tags:
      - 'v**'

defaults:
  run:
    shell: bash

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  build:
    name: ${{ matrix.os }} ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node@${{ matrix.target }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.target }}
          registry-url: 'https://registry.npmjs.org'

      - name: List versions
        run: |
          node -v && npm -v && which npm

      - name: Install dependencies
        run: |
          npm pkg delete scripts.postinstall
          npm ci

      - name: Lint
        run: |
          npm run lint:build

      - name: Build
        run: |
          npm run build

      - name: Cleanup package.json
        run: |
          npm pkg delete devDependencies nano-staged scripts

      - name: Publish to npm (Prerelease)
        if: contains(github.ref, '-') == true
        run: |
          npm config list
          npm publish . --tag=next

      - name: Publish to npm
        if: contains(github.ref, '-') == false
        run: |
          npm config list
          npm publish .

      # See https://github.com/actions/setup-node/issues/73.
      # - name: Setup node@${{ matrix.target }}
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.target }}
      #     registry-url: 'https://npm.pkg.github.com/'
      #     scope: '@motss'

      # - name: Publish to GPR (Prerelease)
      #   if: success() && contains(github.ref, '-') == true
      #   run: |
      #     npm config list
      #     npm publish . --tag=next

      # - name: Publish to GPR
      #   if: success() && contains(github.ref, '-') == false
      #   run: |
      #     npm config list
      #     npm publish .
